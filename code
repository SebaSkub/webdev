<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <h2>Register</h2>
    <form method="POST" action="/it490/register">
        <table>
            <tr>
                <td><h3>User Information</h3></td>
            </tr>
            <tr>
                <td class='top'>Email:</td>
                <td class='top'><input type='email' name='email' required></td>
            </tr>
            <tr>
                <td>First Name:</td>
                <td><input type='text' name='first' required></td>
            </tr>
            <tr>
                <td>Last Name:</td>
                <td><input type='text' name='last' required></td>
            </tr>
            <tr>
                <td>Date of Birth (DOB):</td>
                <td><input type='date' name='DOB' required></td>
            </tr>
            <tr>
                <td>Age:</td>
                <td><input type='number' name='age' required></td>
            </tr>
            <tr>
                <td>League of Legends ID:</td>
                <td><input type='text' name='lolID' required></td>
            </tr>
            <tr>
                <td>Steam Link:</td>
                <td><input type='url' name='steamLink'></td>
            </tr>
            <tr>
                <td>Security Question #1 (Random Word):</td>
                <td><input type='text' name='secQuest1' required></td>
            </tr>
            <tr>
                <td>Security Question #2 (Random PIN):</td>
                <td><input type='text' id='secQuest2' name='secQuest2' required></td>
                <td><button type='button' onclick='generateRandomPin()'>Generate PIN</button></td>
            </tr>
            <tr>
                <td><h3>Login Information</h3></td>
            </tr>
            <tr>
                <td class='top'>Username:</td>
                <td class='top'><input type='text' name='user' required></td>
            </tr>
            <tr>
                <td>Password:</td>
                <td><input type='password' name='pass' required></td>
            </tr>
        </table>
        <br>
        <input type='submit' value='Register'><br><br>
    </form>
    <a href='/it490/login.html'>Return to login page</a>
</body>
</html>


@app.route('/register', methods=['POST'])
def register():
    user_data = {
        'firstName': request.form.get('firstName'),
        'lastName': request.form.get('lastName'),
        'dob': request.form.get('dob'),
        'age': request.form.get('age'),
        'lolId': request.form.get('lolId'),
        'steamLink': request.form.get('steamLink'),
        'securityQuestion1': request.form.get('securityQuestion1'),
        'securityQuestion2': request.form.get('securityQuestion2'),
        'username': request.form.get('username'),
        'password': request.form.get('password')
    }

    # Process the form data as needed

    return "Registration successful"  # You can handle success and response as needed

def send_to_rabbitmq(data):
    try:
         Publish the user registration data to the RabbitMQ queue
        channel.basic_publish(
            exchange='',
            routing_key=RABBITMQ_QUEUE,
            body=json.dumps(data),
            properties=pika.BasicProperties(
                delivery_mode=2,  # Make the message persistent
            )
        
        print(" [x] Sent user data to RabbitMQ")
   except Exception as e:
        print(f"An error occurred: {e}")





<!DOCTYPE html>
<html>
    
<head>
    <title>User Registration</title>
   <style>
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(to right, #2980b9, #6dd5fa);
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .registration-container {
            max-width: 400px;
            background: #333;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            padding: 20px;
        }

        h2 {
            text-align: center;
            color: #fff;
        }

        form {
            padding: 20px;
        }

        table {
            width: 100%;
        }

        td {
            padding: 10px;
        }

        .top {
            padding-top: 15px;
        }

        input[type="text"],
        input[type="email"],
        input[type="password"],
        input[type="date"],
        input[type="number"],
        input[type="url"] {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #007bff; /* Blue border */
            border-radius: 3px;
            background: #444; /* Dark background */
            color: #fff;
        }

        input[type="submit"] {
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 3px;
            padding: 10px 15px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        input[type="submit"]:hover {
            background-color: #0056b3;
        }

        a {
            text-decoration: none;
            display: block;
            text-align: center;
            margin-top: 10px;
            color: #007bff;
            background: #fff;
            padding: 8px 15px;
            border-radius: 3px;
        }

        a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <h2>User Registration</h2>
    <form id="registrationForm">
    <div>
        <label for="firstName">First Name:</label>
        <input type="text" id="firstName" name="firstName" required>
    </div>
    <div>
        <label for="lastName">Last Name:</label>
        <input type="text" id="lastName" name="lastName" required>
    </div>
    <div>
        <label for="dob">Date of Birth:</label>
        <input type="date" id="dob" name="dob" required>
    </div>
    <div>
        <label for="age">Age:</label>
        <input type="number" id="age" name="age" required>
    </div>
    <div>
        <label for="lolId">League of Legends ID:</label>
        <input type="text" id="lolId" name="lolId" required>
    </div>
    <div>
        <label for="steamLink">Steam Link:</label>
        <input type="text" id="steamLink" name="steamLink" required>
    </div>
    <div>
        <label for="securityQuestion1">Security Question #1: (Random Word)</label>
        <input type="text" id="securityQuestion1" name="securityQuestion1" required>
    </div>
    <div>
        <label for="securityQuestion2">Security Question #2: (Random PIN)</label>
        <input type="text" id="securityQuestion2" name="securityQuestion2" readonly>
        <button type="button" id="generatePIN">Generate PIN</button>
    </div>

    <h3>Login Information</h3>
    <div>
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required>
    </div>
    <div>
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required>
    </div>
    <div>
        <button type="submit">Register</button>
    </div>
</form>

        <a href="/it490/login.html">Back to Login</a>

    <script>
        document.getElementById('generatePIN').addEventListener('click', function() {
            const securityQuestion2Input = document.getElementById('securityQuestion2');
            const randomPin = generateRandomPin();
            securityQuestion2Input.value = randomPin;
        });

        function generateRandomPin() {
            return Math.floor(1000 + Math.random() * 9000).toString();
        }
    </script>
<!--
    <script>
        document.getElementById('registrationForm').addEventListener('submit', function(event) {
            event.preventDefault();

            const formData = {
                firstName: document.getElementById('firstName').value,
                lastName: document.getElementById('lastName').value,
                dob: document.getElementById('dob').value,
                age: document.getElementById('age').value,
                lolId: document.getElementById('lolId').value,
                steamLink: document.getElementById('steamLink').value,
                securityQuestion1: document.getElementById('securityQuestion1').value,
                securityQuestion2: document.getElementById('securityQuestion2').value,
                username: document.getElementById('username').value,
                password: document.getElementById('password').value,
            };

            fetch('/register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then(response => {
            if (response.ok) {
                window.location.href = '/it490/login.html'; // Replace with your login page URL

                // Registration successful, you can handle success here
                console.log('Registration successful');
            } else {

                // Registration failed, you can handle errors here
                console.error('Registration failed');
            }
        })
        .catch(error => {
            console.error('An error occurred:', error);

        });
        
        // Reset the form after submission
        document.getElementById('registrationForm').reset();
    });
        
    
    </script>
    -->
     <script>
        document.getElementById('registrationForm').addEventListener('submit', function(event) {
            event.preventDefault();

            const formData = `firstName=${encodeURIComponent(document.getElementById('firstName').value)}&` +
                            `lastName=${encodeURIComponent(document.getElementById('lastName').value)}&` +
                            `dob=${encodeURIComponent(document.getElementById('dob').value)}&` +
                            `age=${encodeURIComponent(document.getElementById('age').value)}&` +
                            `lolId=${encodeURIComponent(document.getElementById('lolId').value)}&` +
                            `steamLink=${encodeURIComponent(document.getElementById('steamLink').value)}&` +
                            `securityQuestion1=${encodeURIComponent(document.getElementById('securityQuestion1').value)}&` +
                            `securityQuestion2=${encodeURIComponent(document.getElementById('securityQuestion2').value)}&` +
                            `username=${encodeURIComponent(document.getElementById('username').value)}&` +
                            `password=${encodeURIComponent(document.getElementById('password').value)}`;

            fetch('/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded' // Use form-urlencoded
                },
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    window.location.href = '/it490/login.html'; // Replace with your login page URL
                    console.log('Registration successful');
                } else {
                    console.error('Registration failed');
                }
            })
            .catch(error => {
                console.error('An error occurred:', error);
            });

            // Reset the form after submission
            document.getElementById('registrationForm').reset();
        });
    </script>
    
</body>
</html>

